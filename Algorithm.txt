Algortihm 1:

1. Initialize  porta and portb with one bus containg bus_id and battery_capacity.
2. Initialize  charger_schdule list with schedule of charger
2. Create and initialize Schedule1 Arraylist of String Containing port Address and battery remaining.
3. Add the Schedule from west point and east point to Schdeule1
4. Iniitalize int Time counter=0 and Time_limit =1700
5. For Time in Time_limit:
6.    increment Time++
7.    call to charging function()//Algorithm 3
8.    For schedule in Schedule1:
9.	if Time = schedule:
10.    	      instansit = add_intransit(schedule)
11.   	      if intransit is not empty:
12.               For value in instansit:
13.           		if Time = value:
14.               	   if port is port B:
15.                   		charger_count++
16.                   		add value in portb 
17.                   		remove value from intransit
              
18.               	   else:
19.               		charger_count++
20.               		add vale in porta 
21.               		remove value from intransit

22. intransit list is updated 
23. For loop at line 5  ends
24. Print bus_counter,charger_count,buses at port A , port B and at intransit
25. print cost of chargers = charger_count* value_of_charger

    

---------------------------------------------------------------------------------------------------Algorithm 2: add_intransit

1. Intitialize Arraylist of String Containing the Destination port address and the remaining 	battery left after the trip.
2. create method add_intransit ( Integer Schedule):
3. if port is A in Schedule:
4.   	 if  porta is not empty:
5. 	      	 remove bus from porta and add to intransit list with desitnation port
6.                 battery remaining = previous battery - 40
    
7. 	 else:
8.          remove bus from top of the bus_container stack
9.          Add top element to porta
10.          bus_count++
11.          remove bus from porta and add to intransit list with desitnation port
                 battery remaining = previous battery - 40
12.   else:
13.      if  portb is not empty:
14.        	 remove bus from portb and add to intransit list with desitnation port
15.                 battery remaining = previous battery - 40
    
16. 	 else:
17.          remove bus from top of the bus_container stack
18.          Add top element to portb19.
19.          bus_count++
20.          remove bus from portb and add to intransit list with desitnation port
21.                 battery remaining = previous battery - 40

22.  return intransit list with modified values containing buses (busid, bus destination address 	,remaining battery )



---------------------------------------------------------------------------------------------------
Algoritm 3:  Charging Function(Time)

1.  if Time = charging Schedule:
2.    while  Time >=value in charging_schdeule && Time < value in charging_schdeule: 
3.    		increment the battery values in porta and portb
4.   Battery Capacity increase = (bus battery/ charger capacity)* Time (30 minutes). 
4.  return updated battery charged values of buses in porta and portb


  
    